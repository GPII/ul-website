# Build the full suite of containers required to serve up and maintain the UL API
#
# Usage: `docker-compose up`
version: "3.2"

services:
  ul-website:
    image: ul-website
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - couchdb-lucene
      - couchdb
    ports:
      - "4896:4896"
    volumes:
      - type: bind
        source: /srv/ul-images
        target: /srv/ul-images
      - type: bind
        source: /srv/ul-updates-reports
        target: /srv/ul-updates-reports
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 120s

  # This must use this alias in order for couchdb-lucene to use it with its default options.
  couchdb:
    image: couchdb:2.2
    ports:
      - "5984:5984"
    env_file:
      - .docker-env-couchdb
    volumes:
      - type: bind
        source: /srv/docker-couchdb_data
        target: /opt/couchdb/data
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 120s

  couchdb-lucene:
    image: klaemo/couchdb-lucene:2.1.0
    ports:
      - "5985:5985"
    depends_on:
      - couchdb
    deploy:
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
        window: 120s

  # A "task" container which starts and immediately exits on composition build.
  # Use `docker-compose run ul-imports <npm script>` to run this container.
  ul-imports:
    image: ul-imports
    build:
      context: ./node_modules/ul-imports
      dockerfile: Dockerfile
    env_file:
      - .docker-env-ul-imports
    depends_on:
      - couchdb
      - ul-website
    command: noop
    volumes:
      - type: bind
        source: /srv/ul-diffs
        target: /srv/ul-diffs
      - type: bind
        source: /srv/ul-images
        target: /srv/ul-images
      - type: bind
        source: /srv/ul-import-output
        target: /srv/ul-import-output
      - type: bind
        source: /srv/ul-updates-reports
        target: /srv/ul-updates-reports
    deploy:
      restart_policy:
        condition: none
